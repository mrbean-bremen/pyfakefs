name: Testsuite

on: [push]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9, 3.9, '3.10', '3.11']
        include:
          - python-version: pypy3
            os: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -m pip install --upgrade pip
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache dependencies
      id: cache-dep
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ matrix.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/extra_requirements.txt') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.python-version }}-pip-

    - name: Install dependencies
      run: |
        pip install wheel
        pip install -r requirements.txt
        pip install -r extra_requirements.txt
        pip install .
    - name: Install extra dependencies
      run: |
        pip install -r extra_requirements.txt
    - name: Run performance tests
      run: |
        if [[ '${{ matrix.os  }}' != 'macOS-latest' ]]; then
          export TEST_PERFORMANCE=1
          python -m pyfakefs.tests.performance_test
        fi
      shell: bash
